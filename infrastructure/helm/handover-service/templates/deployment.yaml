apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "handover-service.fullname" . }}
  labels:
    {{- include "handover-service.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    prometheus.io/scrape: "true"
    prometheus.io/port: {{ .Values.service.port | quote }}
    prometheus.io/path: "/metrics"

spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  selector:
    matchLabels:
      {{- include "handover-service.selectorLabels" . | nindent 6 }}
  
  template:
    metadata:
      labels:
        {{- include "handover-service.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: {{ .Values.service.annotations."prometheus.io/scrape" | quote }}
        prometheus.io/port: {{ .Values.service.annotations."prometheus.io/port" | quote }}
        prometheus.io/path: {{ .Values.service.annotations."prometheus.io/path" | quote }}
    
    spec:
      # Security Context for Pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          
          # Security Context for Container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: POSTGRES_PASSWORD
            - name: NODE_ENV
              value: "production"
            - name: SERVICE_NAME
              value: "handover-service"
            - name: LOG_LEVEL
              value: "info"

          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}

          # Liveness Probe
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          # Readiness Probe
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          # Startup Probe
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30

          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /app/config
              readOnly: true

      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          configMap:
            name: {{ template "handover-service.fullname" . }}-config

      # Pod Scheduling
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}

      # Service Account
      serviceAccountName: {{ template "handover-service.serviceAccountName" . }}
      automountServiceAccountToken: true

      # Pod Termination
      terminationGracePeriodSeconds: 60