# Elasticsearch StatefulSet Helm Template
# Version: 7.17.3
# Purpose: Deploys a production-grade Elasticsearch cluster for centralized logging
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "elasticsearch.fullname" . }}
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: emr-task-platform
    app.kubernetes.io/managed-by: helm
    app.kubernetes.io/version: "7.17.3"
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/elasticsearch-configmap.yaml") . | sha256sum }}
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}

spec:
  serviceName: {{ template "elasticsearch.fullname" . }}
  replicas: {{ .Values.elasticsearch.replicas }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/instance: {{ .Release.Name }}
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: logging
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9114"
        co.elastic.logs/enabled: "true"
        
    spec:
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsNonRoot: true
      
      # Ensure high availability across nodes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: elasticsearch
                  app.kubernetes.io/instance: {{ .Release.Name }}
      
      initContainers:
      # Set correct permissions and system settings
      - name: init-sysctl
        image: busybox:1.32
        securityContext:
          privileged: true
        command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
      
      # Set correct filesystem permissions
      - name: init-fs
        image: busybox:1.32
        command: ['sh', '-c', 'chown -R 1000:1000 /usr/share/elasticsearch/data']
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
      
      containers:
      - name: elasticsearch
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
        imagePullPolicy: IfNotPresent
        
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.name
          value: {{ .Release.Name }}-es-cluster
        - name: discovery.seed_hosts
          value: "{{ template "elasticsearch.fullname" . }}-headless"
        - name: cluster.initial_master_nodes
          value: "{{ template "elasticsearch.fullname" . }}-0"
        - name: ES_JAVA_OPTS
          value: {{ .Values.elasticsearch.javaOpts | default "-Xms4g -Xmx4g -XX:+UseG1GC -XX:MaxGCPauseMillis=200" }}
        - name: bootstrap.memory_lock
          value: "true"
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.monitoring.collection.enabled
          value: "true"
        
        ports:
        - name: http
          containerPort: 9200
          protocol: TCP
        - name: transport
          containerPort: 9300
          protocol: TCP
        
        resources:
{{ toYaml .Values.elasticsearch.resources | indent 10 }}
        
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
      
      volumes:
      - name: elasticsearch-config
        configMap:
          name: {{ template "elasticsearch.fullname" . }}-config
  
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.elasticsearch.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.elasticsearch.persistence.size }}