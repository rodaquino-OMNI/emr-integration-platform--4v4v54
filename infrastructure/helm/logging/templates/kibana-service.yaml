apiVersion: v1
kind: Service
metadata:
  name: {{ template "kibana.fullname" . }}
  labels:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: elk-stack
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    # Additional labels for consistent selection
    app.kubernetes.io/version: "7.17.3"
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  annotations:
    # Prometheus monitoring annotations
    prometheus.io/scrape: {{ .Values.kibana.monitoring.enabled | default "true" | quote }}
    prometheus.io/port: {{ .Values.kibana.monitoring.port | default "5601" | quote }}
    prometheus.io/path: {{ .Values.kibana.monitoring.path | default "/stats" | quote }}
    
    # AWS load balancer configuration
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    
    # Cross-zone load balancing for HA
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    
    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    
    # Helm metadata
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}

spec:
  type: {{ .Values.kibana.service.type | default "ClusterIP" }}
  ports:
    - name: http
      port: {{ .Values.kibana.service.port | default 5601 }}
      targetPort: http
      protocol: TCP
      {{- if eq (.Values.kibana.service.type | default "ClusterIP") "NodePort" }}
      nodePort: {{ .Values.kibana.service.nodePort | default 30601 }}
      {{- end }}
  selector:
    app.kubernetes.io/name: kibana
    app.kubernetes.io/instance: {{ .Release.Name }}
  sessionAffinity: None
  publishNotReadyAddresses: false
  {{- if eq (.Values.kibana.service.type | default "ClusterIP") "LoadBalancer" }}
  # Load balancer specific configurations
  loadBalancerSourceRanges:
    {{- range .Values.kibana.service.loadBalancerSourceRanges | default (list "0.0.0.0/0") }}
    - {{ . }}
    {{- end }}
  externalTrafficPolicy: Local
  {{- end }}