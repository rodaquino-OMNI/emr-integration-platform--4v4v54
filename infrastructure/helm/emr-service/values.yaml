# Default values for EMR integration service
# This is a YAML-formatted file.

replicaCount: 3

image:
  repository: eclipse-temurin # version: 17-jre
  tag: "17-jre"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/emr-service-role"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/metrics"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "emr-service"
  vault.hashicorp.com/agent-pre-populate-only: "true"

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

service:
  type: ClusterIP
  ports:
    http: 8080
    hl7: 2575
    metrics: 9090

resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector:
  kubernetes.io/os: linux
  node-type: emr-workload

tolerations:
  - key: "emr-workload"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - emr-service
          topologyKey: kubernetes.io/hostname

emr:
  fhir:
    version: "R4"
    timeout: 30000
    retryAttempts: 3
    endpoints:
      epic:
        baseUrl: "https://epic-fhir.example.com"
        version: "R4"
        auth:
          type: "oauth2"
          tokenUrl: "https://epic-auth.example.com/oauth2/token"
      cerner:
        baseUrl: "https://cerner-fhir.example.com"
        version: "R4"
        auth:
          type: "oauth2"
          tokenUrl: "https://cerner-auth.example.com/oauth2/token"
  
  hl7:
    version: "2.5.1"
    port: 2575
    endpoints:
      epic:
        host: "epic-hl7.example.com"
        port: 2575
        facility: "EPIC"
      cerner:
        host: "cerner-hl7.example.com"
        port: 2575
        facility: "CERNER"

monitoring:
  enabled: true
  path: "/metrics"
  port: 8080
  scrapeInterval: "15s"
  alerts:
    responseTime:
      threshold: "500ms"
      window: "5m"
    errorRate:
      threshold: "1%"
      window: "5m"
    availability:
      threshold: "99.99%"
      window: "24h"