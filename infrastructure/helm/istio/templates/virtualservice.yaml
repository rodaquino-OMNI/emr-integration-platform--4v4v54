# Istio VirtualService configuration template v1.18+
# Implements advanced traffic management, retry policies and security settings
# for the EMR Task Management platform

apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  {{- template "istio.metadata" . }}
  annotations:
    istio.io/rev: "1-18"
    monitoring.istio.io/scrape: "true"
    sidecar.istio.io/inject: "true"
spec:
  # Define hosts that this VirtualService applies to
  hosts:
    {{- .Values.virtualServices.hosts | toYaml | nindent 2 }}

  # Associate with Istio Gateway for external traffic
  gateways:
    - {{ include "istio.gateway.name" . }}

  # HTTP route configurations with advanced policies
  http:
    # API v1 endpoint configuration
    - match:
        - uri:
            prefix: "/api/v1"
      route:
        - destination:
            host: {{ .Values.global.host }}
            port:
              number: 8080
            
      # Retry policy for 99.99% availability
      retries:
        attempts: 3
        perTryTimeout: "2s"
        retryOn: >-
          connect-failure,
          refused-stream,
          unavailable,
          cancelled,
          resource-exhausted

      # Global timeout setting
      timeout: "10s"

      # CORS security policy
      corsPolicy:
        allowOrigins:
          - exact: "https://*.emrtask.com"
        allowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
        allowHeaders:
          - Authorization
          - Content-Type
          - Accept
          - X-Request-ID
          - X-API-Version
        allowCredentials: true
        maxAge: "24h"

    # Health check endpoint configuration
    - match:
        - uri:
            prefix: "/health"
      route:
        - destination:
            host: {{ .Values.global.host }}
            port:
              number: 8080
      timeout: "5s"

    # Metrics endpoint for monitoring
    - match:
        - uri:
            prefix: "/metrics"
      route:
        - destination:
            host: {{ .Values.global.host }}
            port:
              number: 9090
      timeout: "5s"

  # TCP route configurations for non-HTTP traffic
  tcp:
    - match:
        - port: 9090
      route:
        - destination:
            host: {{ .Values.global.host }}
            port:
              number: 9090

  # TLS settings
  tls:
    - match:
        - port: 443
          sniHosts:
            {{- .Values.virtualServices.hosts | toYaml | nindent 12 }}
      route:
        - destination:
            host: {{ .Values.global.host }}
            port:
              number: 8443