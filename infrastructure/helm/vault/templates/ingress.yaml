# HashiCorp Vault Ingress Configuration
# Version: 1.13.0
# Purpose: Configures secure external access to Vault UI and API with TLS termination and security controls

apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: {{ template "vault.fullname" . }}
  labels:
    {{- include "vault.labels" . | nindent 4 }}
  annotations:
    # Ingress Controller Configuration
    kubernetes.io/ingress.class: {{ .Values.ingress.annotations.kubernetes.io/ingress.class }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.annotations.cert-manager.io/cluster-issuer }}
    
    # TLS Security Configuration
    nginx.ingress.kubernetes.io/ssl-min-version: "TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384"
    
    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Content-Security-Policy: default-src 'self'";
    
    # Request Limits and Timeouts
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # CORS Configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-Vault-Token"
    
    # Rate Limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"
    nginx.ingress.kubernetes.io/limit-connections: "50"
    
    # Health Checks and Monitoring
    nginx.ingress.kubernetes.io/healthcheck-path: "/v1/sys/health"
    nginx.ingress.kubernetes.io/healthcheck-interval: "10"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9102"
    
    # Load Balancing Configuration
    nginx.ingress.kubernetes.io/load-balance: "least_conn"
    nginx.ingress.kubernetes.io/upstream-max-fails: "3"
    nginx.ingress.kubernetes.io/upstream-fail-timeout: "30"

spec:
  # TLS Configuration
  tls:
  - hosts:
    - {{ .Values.ingress.tls.hosts }}
    secretName: {{ .Values.ingress.tls.secretName }}
  
  # Routing Rules
  rules:
  - host: {{ .Values.ingress.hosts.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ template "vault.fullname" . }}
            port:
              number: {{ .Values.ui.externalPort }}
      # API Path Configuration
      - path: /v1
        pathType: Prefix
        backend:
          service:
            name: {{ template "vault.fullname" . }}
            port:
              number: {{ .Values.ui.externalPort }}