{{/* Service template for ArgoCD components */}}
{{- define "argocd.service" -}}
{{- $componentName := .componentName -}}
{{- $serviceConfig := .serviceConfig -}}
{{- $haConfig := .haConfig -}}
apiVersion: v1
kind: Service
metadata:
  name: argocd-{{ $componentName }}
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: {{ $componentName }}
    app.kubernetes.io/part-of: emrtask-platform
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  annotations:
    # Prometheus metrics scraping configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "8082"
    prometheus.io/path: "/metrics"
    # Load balancer configurations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # Security annotations
    security.alpha.kubernetes.io/pod-security-policy: "restricted"
    # Health check configuration
    health.check.path: "/healthz"
    health.check.port: "8081"
spec:
  type: {{ .Values.server.service.type | default "ClusterIP" }}
  {{- if eq .Values.server.service.type "LoadBalancer" }}
  externalTrafficPolicy: Local
  {{- end }}
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8443
      protocol: TCP
    - name: metrics
      port: 8082
      targetPort: 8082
      protocol: TCP
    - name: healthz
      port: 8081
      targetPort: 8081
      protocol: TCP
    {{- if .Values.ha.enabled }}
    - name: tcp-redis
      port: 6379
      targetPort: 6379
      protocol: TCP
    {{- end }}
  selector:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: {{ $componentName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  {{- if .Values.ha.enabled }}
  topologyKeys:
    - "kubernetes.io/hostname"
    - "topology.kubernetes.io/zone"
    - "topology.kubernetes.io/region"
  {{- end }}
{{- end }}

---
# ArgoCD Server Service
{{- $serverServiceConfig := dict "componentName" "server" -}}
{{- include "argocd.service" (dict "componentName" "server" "serviceConfig" $serverServiceConfig "haConfig" .Values.ha "Values" .Values "Release" .Release "Chart" .Chart) }}

---
# ArgoCD Repo Server Service
{{- $repoServiceConfig := dict "componentName" "repo-server" -}}
{{- include "argocd.service" (dict "componentName" "repo-server" "serviceConfig" $repoServiceConfig "haConfig" .Values.ha "Values" .Values "Release" .Release "Chart" .Chart) }}

---
# ArgoCD Application Controller Service
{{- $controllerServiceConfig := dict "componentName" "application-controller" -}}
{{- include "argocd.service" (dict "componentName" "application-controller" "serviceConfig" $controllerServiceConfig "haConfig" .Values.ha "Values" .Values "Release" .Release "Chart" .Chart) }}