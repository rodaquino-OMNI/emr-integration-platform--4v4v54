# Helm values configuration for EMR Task Management Platform Monitoring Stack
# Implements comprehensive monitoring supporting 99.99% uptime SLA

prometheus:
  server:
    version: v2.44.0  # Prometheus server version
    retention: 30d    # Data retention period
    replicaCount: 2   # HA configuration with 2 replicas
    
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    
    persistentVolume:
      enabled: true
      size: 50Gi
      storageClass: gp2
    
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534  # nobody user
    
    serviceMonitor:
      enabled: true
      interval: 30s

grafana:
  version: 9.5.0
  replicaCount: 2
  
  adminPassword: "{{ randAlphaNum 16 }}"
  
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  
  persistence:
    enabled: true
    size: 10Gi
    storageClass: gp2
  
  datasources:
    prometheus:
      type: prometheus
      url: http://prometheus-server:9090
      isDefault: true
      jsonData:
        timeInterval: 30s
  
  dashboardProviders:
    emrTaskMonitoring:
      name: EMR Task Monitoring
      folder: EMR Dashboards
      type: file
      options:
        path: /var/lib/grafana/dashboards
  
  securityContext:
    runAsNonRoot: true
    runAsUser: 472  # grafana user

alertmanager:
  version: v0.25.0
  replicaCount: 2
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  persistence:
    enabled: true
    size: 2Gi
    storageClass: gp2
  
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: "{{ .Values.alertmanager.slack.webhookUrl }}"
    
    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: pagerduty-primary
    
    receivers:
      - name: pagerduty-primary
        pagerduty_configs:
          - service_key: "{{ .Values.alertmanager.pagerduty.serviceKey }}"
            severity: critical
      
      - name: slack-notifications
        slack_configs:
          - channel: '#monitoring-alerts'
            send_resolved: true
  
  securityContext:
    runAsNonRoot: true
    runAsUser: 65534  # nobody user