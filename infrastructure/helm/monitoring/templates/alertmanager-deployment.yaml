apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: {{ .Release.Namespace }}
  labels:
    app: alertmanager
    release: {{ .Release.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: monitoring
  annotations:
    # Trigger pod rollout when config changes
    checksum/config: {{ include (print $.Template.BasePath "/alertmanager-configmap.yaml") . | sha256sum }}
    prometheus.io/scrape: "true"
    prometheus.io/port: "9093"

spec:
  # High availability configuration with multiple replicas
  replicas: {{ .Values.alertmanager.replicaCount }}
  
  # Pod selection criteria
  selector:
    matchLabels:
      app: alertmanager
      release: {{ .Release.Name }}
  
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: alertmanager
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9093"
        
    spec:
      # Security context for enhanced pod security
      securityContext:
        fsGroup: 65534  # nobody group
        runAsNonRoot: true
        runAsUser: 65534  # nobody user
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: alertmanager
        image: "prom/alertmanager:{{ .Values.alertmanager.version }}"
        imagePullPolicy: IfNotPresent
        
        args:
        - --config.file=/etc/alertmanager/alertmanager.yml
        - --storage.path=/alertmanager
        - --cluster.listen-address=0.0.0.0:9094
        - --cluster.peer=alertmanager-0.alertmanager:9094
        - --cluster.peer=alertmanager-1.alertmanager:9094
        - --web.external-url={{ .Values.alertmanager.baseURL }}
        
        ports:
        - name: http
          containerPort: 9093
          protocol: TCP
        - name: cluster
          containerPort: 9094
          protocol: TCP
          
        # Resource limits and requests
        resources:
{{ toYaml .Values.alertmanager.resources | indent 10 }}

        # Health checks
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3

        volumeMounts:
        - name: config-volume
          mountPath: /etc/alertmanager
        - name: storage-volume
          mountPath: /alertmanager
        - name: tmp-volume
          mountPath: /tmp
          readOnly: false

      volumes:
      - name: config-volume
        configMap:
          name: alertmanager-config
      - name: storage-volume
        persistentVolumeClaim:
          claimName: alertmanager-storage
      - name: tmp-volume
        emptyDir: {}

      # Pod scheduling configuration
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alertmanager
              topologyKey: kubernetes.io/hostname

      # Node selection and tolerations
      nodeSelector:
{{ toYaml .Values.alertmanager.nodeSelector | indent 8 }}
      
      tolerations:
{{ toYaml .Values.alertmanager.tolerations | indent 8 }}

      # Service account and termination settings
      serviceAccountName: alertmanager
      terminationGracePeriodSeconds: 60