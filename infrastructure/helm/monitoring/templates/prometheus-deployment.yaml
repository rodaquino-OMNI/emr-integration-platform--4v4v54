apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    component: server
    release: {{ .Release.Name }}
  annotations:
    # Trigger pod rollout when config changes
    checksum/config: {{ include (print $.Template.BasePath "/prometheus-config.yaml") . | sha256sum }}
spec:
  # High availability deployment with 2 replicas
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
      component: server
  # Zero-downtime updates
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: prometheus
        component: server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      serviceAccountName: prometheus
      # Enhanced security context
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: prometheus
          image: prom/prometheus:{{ .Values.prometheus.server.version }}
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time={{ .Values.prometheus.server.retention }}
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
            - --web.enable-admin-api
          ports:
            - containerPort: 9090
              protocol: TCP
          # Resource limits and requests from values
          resources:
            {{- toYaml .Values.prometheus.server.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
              readOnly: true
            - name: storage
              mountPath: /data
          # Comprehensive health probes
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 30
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /-/ready
              port: 9090
            failureThreshold: 30
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: storage
          persistentVolumeClaim:
            claimName: prometheus-storage
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - prometheus
                topologyKey: kubernetes.io/hostname