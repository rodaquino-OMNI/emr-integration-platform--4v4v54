apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-gateway.fullname" . }}
  labels:
    {{- include "api-gateway.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "api-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api-gateway.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        readOnlyRootFilesystem: true
      containers:
        - name: kong
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          ports:
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: proxy-ssl
              containerPort: 8443
              protocol: TCP
            - name: metrics
              containerPort: 8080
              protocol: TCP
            - name: admin
              containerPort: 8001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: proxy
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: proxy
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_PROXY_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_ADMIN_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_PROXY_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_PLUGINS
              value: "bundled,rate-limiting,jwt,cors,ip-restriction,request-transformer,response-transformer,prometheus,bot-detection"
            - name: KONG_SSL_CERT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.fullname" . }}-tls
                  key: tls.key
            - name: KONG_SSL_CERT
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-gateway.fullname" . }}-tls
                  key: tls.crt
            - name: KONG_NGINX_WORKER_PROCESSES
              value: "auto"
            - name: KONG_PROXY_BUFFER_SIZE
              value: "16k"
            - name: KONG_PROXY_BUFFERS
              value: "8 16k"
            - name: KONG_NGINX_WORKER_CONNECTIONS
              value: "16384"
            - name: KONG_PROXY_LARGE_CLIENT_HEADER_BUFFERS
              value: "8 16k"
            - name: KONG_RATE_LIMITING_POLICY
              value: "local"
            - name: KONG_RATE_LIMITING_SYNC_RATE
              value: "-1"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: kong-prefix
              mountPath: /kong_prefix/
      volumes:
        - name: tmp
          emptyDir: {}
        - name: kong-prefix
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "api-gateway.name" . }}
                topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ include "api-gateway.serviceAccountName" . }}