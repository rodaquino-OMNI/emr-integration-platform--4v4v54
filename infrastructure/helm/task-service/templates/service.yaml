apiVersion: v1
kind: Service
metadata:
  name: {{ include "task-service.fullname" . }}
  labels:
    {{- include "task-service.labels" . | nindent 4 }}
  annotations:
    # Enable Prometheus metrics scraping
    prometheus.io/scrape: "{{ .Values.monitoring.enabled }}"
    prometheus.io/port: "{{ .Values.monitoring.port }}"
    # Use Network Load Balancer for better performance
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    # Enable topology aware routing for better latency
    service.kubernetes.io/topology-aware-hints: "auto"
    # Enable endpointslice for improved service discovery
    service.kubernetes.io/use-endpoint-slices: "true"
    # Configure connection draining for graceful pod termination
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"
    # Enable cross-zone load balancing for high availability
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # Configure health checks
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "3"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"

spec:
  type: {{ .Values.service.type }}
  # Enable session affinity for consistent routing
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hour session stickiness
  
  # Configure topology aware routing for multi-zone deployments
  topologyKeys:
    - "kubernetes.io/hostname"
    - "topology.kubernetes.io/zone"
    - "*"
  
  ports:
    - port: {{ .Values.service.port }}
      targetPort: {{ .Values.service.targetPort }}
      protocol: TCP
      name: {{ .Values.service.name }}
      # Enable named port for better service discovery
      appProtocol: http
  
  # Use selector from deployment template
  selector:
    {{- include "task-service.selectorLabels" . | nindent 4 }}
  
  # Configure internal traffic policy for optimal routing
  internalTrafficPolicy: Cluster
  
  # Configure external traffic policy for preserving client source IPs
  externalTrafficPolicy: Local
  
  # Configure publish not ready addresses for faster endpoint updates
  publishNotReadyAddresses: false
  
  # Configure IP families for dual-stack support
  ipFamilyPolicy: PreferDualStack
  ipFamilies:
    - IPv4
    - IPv6