apiVersion: v1
kind: Secret
metadata:
  name: jwt-secrets
  namespace: emr-task
  labels:
    app: api-gateway
    component: security
    environment: production
  annotations:
    # Secret rotation policy - 90 days
    kubernetes.io/rotation-period: "2160h"
    
    # Vault agent injector configuration
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "api-gateway"
    vault.hashicorp.com/agent-inject-secret-jwt: "auth/jwt/keys"
    vault.hashicorp.com/agent-pre-populate: "true"
    
    # Cloud KMS encryption configuration
    security.cloud.google.com/kms-key: "projects/emr-task/locations/global/keyRings/app-secrets/cryptoKeys/jwt-key"

type: Opaque
data:
  # JWT signing key for access tokens
  JWT_SECRET: ${VAULT_JWT_SECRET}
  
  # Separate signing key for refresh tokens
  JWT_REFRESH_SECRET: ${VAULT_JWT_REFRESH_SECRET}
  
  # Token expiry settings (in seconds)
  JWT_EXPIRY: "3600"  # 1 hour
  REFRESH_TOKEN_EXPIRY: "2592000"  # 30 days
  
  # JWT configuration
  JWT_ALGORITHM: "HS512"
  JWT_ISSUER: "emr-task-platform"
  JWT_AUDIENCE: "emr-task-api"

---
# RBAC configuration for secret access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jwt-secrets-reader
  namespace: emr-task
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["jwt-secrets"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jwt-secrets-reader-binding
  namespace: emr-task
subjects:
- kind: ServiceAccount
  name: api-gateway
  namespace: emr-task
roleRef:
  kind: Role
  name: jwt-secrets-reader
  apiGroup: rbac.authorization.k8s.io