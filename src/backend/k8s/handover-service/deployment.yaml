apiVersion: apps/v1
kind: Deployment
metadata:
  name: handover-service
  namespace: default
  labels:
    app: handover-service
    component: backend
    part-of: emr-task-platform
spec:
  # High availability with 3 replicas for redundancy and 40% error reduction
  replicas: 3
  # Zero-downtime updates with rolling deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # Pod selector for service binding
  selector:
    matchLabels:
      app: handover-service
  template:
    metadata:
      labels:
        app: handover-service
      # Prometheus monitoring annotations
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3003"
        prometheus.io/path: "/metrics"
    spec:
      # Security context for container hardening
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: handover-service
          image: handover-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3003
              name: http
          # Resource limits for fair resource sharing
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          # Health checks for high availability
          livenessProbe:
            httpGet:
              path: /health
              port: 3003
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 3003
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          # Secure environment configuration
          envFrom:
            - secretRef:
                name: postgres-secrets
            - configMapRef:
                name: redis-config
          # Security hardening
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      # Pod security policies
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - handover-service
                topologyKey: "kubernetes.io/hostname"
      # Tolerations for node scheduling
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300